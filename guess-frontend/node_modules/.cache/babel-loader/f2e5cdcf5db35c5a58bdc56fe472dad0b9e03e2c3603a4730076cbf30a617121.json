{"ast":null,"code":"var _jsxFileName = \"/Users/reecefuller/Documents/guess-ui-draft/src/components/AutoComplete.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport AsyncSelect from \"react-select/async\";\nimport { GuessStatus } from \"./GuessStatus\";\nimport axios from \"axios\";\n//returns a JSON object of all the wiki names fetched from the backend\n//I think this can be done in a much simpler way\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoadWikis() {\n  _s();\n  const [wikis, setWikis] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(\"http://local_host:8000/wikis/get_all_titles\").then(response => {\n      setWikis(response.data.wikis);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return wikis;\n}\n\n//creates an autocomplete bar for the wiki names\n_s(LoadWikis, \"rqRw4UJrpCu2x0jFFXnVYMGc5HU=\");\n_c = LoadWikis;\nexport const AutoCompleteBar = ({\n  options\n}) => {\n  _s2();\n  //let options = LoadWikis();\n  //const options = LoadWikis();\n  const [guessData, setGuessData] = React.useState(null);\n  const [hasInput, setHasInput] = React.useState(false);\n  const [color, setColor] = React.useState(\"#212529\");\n  const customStyles = {\n    control: provided => ({\n      ...provided,\n      backgroundColor: color\n    }),\n    menu: provided => ({\n      ...provided,\n      backgroundColor: \"#212529\"\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      color: \"white\",\n      backgroundColor: \"#212529\"\n    }),\n    singleValue: provided => ({\n      ...provided,\n      color: \"white\"\n    }),\n    input: provided => ({\n      ...provided,\n      color: \"white\"\n    })\n  };\n  const handleChange = selectedOption => {\n    console.log(\"handleChange\", selectedOption);\n    fetch(\"/check_wiki\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        wiki: selectedOption.label\n      })\n    }).then(response => {\n      response.json().then(data => {\n        console.log(\"data_sent = \", data.guess);\n        setHasInput(true);\n        setGuessData(data.guess);\n        setColor(data.guess === 0 ? \"#851902\" : \"green\");\n      });\n    });\n  };\n  const loadOptions = (searchValue, callback) => {\n    setTimeout(() => {\n      const filteredOptions = options.filter(option => option.label.toLowerCase().startsWith(searchValue.toLowerCase()));\n      console.log(\"loadOptions\", searchValue, filteredOptions);\n      console.log(\"options\", options);\n      callback(filteredOptions);\n    }, 0);\n  };\n  React.useEffect(() => {\n    if (hasInput) {\n      const timer = setTimeout(() => {\n        setColor(\"#212529\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [hasInput, guessData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [hasInput ? /*#__PURE__*/_jsxDEV(GuessStatus, {\n      guess: guessData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(AsyncSelect, {\n      loadOptions: loadOptions,\n      onChange: handleChange,\n      styles: customStyles,\n      placeholder: \"Search for a wiki\",\n      noOptionsMessage: () => \"No wikis found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(AutoCompleteBar, \"0Da1ctHFbSeiT0/HRbMbG/QtyMA=\");\n_c2 = AutoCompleteBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadWikis\");\n$RefreshReg$(_c2, \"AutoCompleteBar\");","map":{"version":3,"names":["React","AsyncSelect","GuessStatus","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoadWikis","_s","wikis","setWikis","useState","useEffect","get","then","response","data","catch","error","console","log","_c","AutoCompleteBar","options","_s2","guessData","setGuessData","hasInput","setHasInput","color","setColor","customStyles","control","provided","backgroundColor","menu","option","state","singleValue","input","handleChange","selectedOption","fetch","method","headers","body","JSON","stringify","wiki","label","json","guess","loadOptions","searchValue","callback","setTimeout","filteredOptions","filter","toLowerCase","startsWith","timer","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","styles","placeholder","noOptionsMessage","_c2","$RefreshReg$"],"sources":["/Users/reecefuller/Documents/guess-ui-draft/src/components/AutoComplete.jsx"],"sourcesContent":["import React from \"react\";\nimport AsyncSelect from \"react-select/async\";\nimport { GuessStatus } from \"./GuessStatus\";\nimport axios from \"axios\";\n//returns a JSON object of all the wiki names fetched from the backend\n//I think this can be done in a much simpler way\nfunction LoadWikis() {\n  const [wikis, setWikis] = React.useState([]);\n\n  React.useEffect(() => {\n    axios\n      .get(\"http://local_host:8000/wikis/get_all_titles\")\n      .then((response) => {\n        setWikis(response.data.wikis);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return wikis;\n}\n\n//creates an autocomplete bar for the wiki names\nexport const AutoCompleteBar = ({ options }) => {\n  //let options = LoadWikis();\n  //const options = LoadWikis();\n  const [guessData, setGuessData] = React.useState(null);\n  const [hasInput, setHasInput] = React.useState(false);\n  const [color, setColor] = React.useState(\"#212529\");\n\n  const customStyles = {\n    control: (provided) => ({\n      ...provided,\n      backgroundColor: color,\n    }),\n    menu: (provided) => ({\n      ...provided,\n      backgroundColor: \"#212529\",\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      color: \"white\",\n      backgroundColor: \"#212529\",\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n    input: (provided) => ({\n      ...provided,\n      color: \"white\",\n    }),\n  };\n\n  const handleChange = (selectedOption) => {\n    console.log(\"handleChange\", selectedOption);\n    fetch(\"/check_wiki\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ wiki: selectedOption.label }),\n    }).then((response) => {\n      response.json().then((data) => {\n        console.log(\"data_sent = \", data.guess);\n        setHasInput(true);\n        setGuessData(data.guess);\n        setColor(data.guess === 0 ? \"#851902\" : \"green\");\n      });\n    });\n  };\n  const loadOptions = (searchValue, callback) => {\n    setTimeout(() => {\n      const filteredOptions = options.filter((option) =>\n        option.label.toLowerCase().startsWith(searchValue.toLowerCase())\n      );\n      console.log(\"loadOptions\", searchValue, filteredOptions);\n      console.log(\"options\", options);\n      callback(filteredOptions);\n    }, 0);\n  };\n\n  React.useEffect(() => {\n    if (hasInput) {\n      const timer = setTimeout(() => {\n        setColor(\"#212529\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [hasInput, guessData]);\n\n  return (\n    <>\n      {hasInput ? <GuessStatus guess={guessData} /> : null}\n      <AsyncSelect\n        loadOptions={loadOptions}\n        onChange={handleChange}\n        styles={customStyles}\n        placeholder=\"Search for a wiki\"\n        noOptionsMessage={() => \"No wikis found\"}\n      />\n    </>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAE5CZ,KAAK,CAACa,SAAS,CAAC,MAAM;IACpBV,KAAK,CACFW,GAAG,CAAC,6CAA6C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAACP,KAAK,CAAC;IAC/B,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,KAAK;AACd;;AAEA;AAAAD,EAAA,CAjBSD,SAAS;AAAAc,EAAA,GAATd,SAAS;AAkBlB,OAAO,MAAMe,eAAe,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,GAAA;EAC9C;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,KAAK,CAACY,QAAQ,CAAC,SAAS,CAAC;EAEnD,MAAMoB,YAAY,GAAG;IACnBC,OAAO,EAAGC,QAAQ,KAAM;MACtB,GAAGA,QAAQ;MACXC,eAAe,EAAEL;IACnB,CAAC,CAAC;IACFM,IAAI,EAAGF,QAAQ,KAAM;MACnB,GAAGA,QAAQ;MACXC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFE,MAAM,EAAEA,CAACH,QAAQ,EAAEI,KAAK,MAAM;MAC5B,GAAGJ,QAAQ;MACXJ,KAAK,EAAE,OAAO;MACdK,eAAe,EAAE;IACnB,CAAC,CAAC;IACFI,WAAW,EAAGL,QAAQ,KAAM;MAC1B,GAAGA,QAAQ;MACXJ,KAAK,EAAE;IACT,CAAC,CAAC;IACFU,KAAK,EAAGN,QAAQ,KAAM;MACpB,GAAGA,QAAQ;MACXJ,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAED,MAAMW,YAAY,GAAIC,cAAc,IAAK;IACvCtB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEqB,cAAc,CAAC;IAC3CC,KAAK,CAAC,aAAa,EAAE;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEP,cAAc,CAACQ;MAAM,CAAC;IACrD,CAAC,CAAC,CAACnC,IAAI,CAAEC,QAAQ,IAAK;MACpBA,QAAQ,CAACmC,IAAI,CAAC,CAAC,CAACpC,IAAI,CAAEE,IAAI,IAAK;QAC7BG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,IAAI,CAACmC,KAAK,CAAC;QACvCvB,WAAW,CAAC,IAAI,CAAC;QACjBF,YAAY,CAACV,IAAI,CAACmC,KAAK,CAAC;QACxBrB,QAAQ,CAACd,IAAI,CAACmC,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,OAAO,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,WAAW,GAAGA,CAACC,WAAW,EAAEC,QAAQ,KAAK;IAC7CC,UAAU,CAAC,MAAM;MACf,MAAMC,eAAe,GAAGjC,OAAO,CAACkC,MAAM,CAAErB,MAAM,IAC5CA,MAAM,CAACa,KAAK,CAACS,WAAW,CAAC,CAAC,CAACC,UAAU,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,CACjE,CAAC;MACDvC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEiC,WAAW,EAAEG,eAAe,CAAC;MACxDrC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,OAAO,CAAC;MAC/B+B,QAAQ,CAACE,eAAe,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAEDzD,KAAK,CAACa,SAAS,CAAC,MAAM;IACpB,IAAIe,QAAQ,EAAE;MACZ,MAAMiC,KAAK,GAAGL,UAAU,CAAC,MAAM;QAC7BzB,QAAQ,CAAC,SAAS,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAM+B,YAAY,CAACD,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACjC,QAAQ,EAAEF,SAAS,CAAC,CAAC;EAEzB,oBACErB,OAAA,CAAAE,SAAA;IAAAwD,QAAA,GACGnC,QAAQ,gBAAGvB,OAAA,CAACH,WAAW;MAACkD,KAAK,EAAE1B;IAAU;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,IAAI,eACpD9D,OAAA,CAACJ,WAAW;MACVoD,WAAW,EAAEA,WAAY;MACzBe,QAAQ,EAAE3B,YAAa;MACvB4B,MAAM,EAAErC,YAAa;MACrBsC,WAAW,EAAC,mBAAmB;MAC/BC,gBAAgB,EAAEA,CAAA,KAAM;IAAiB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC1C,GAAA,CAhFWF,eAAe;AAAAiD,GAAA,GAAfjD,eAAe;AAAA,IAAAD,EAAA,EAAAkD,GAAA;AAAAC,YAAA,CAAAnD,EAAA;AAAAmD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}