{"ast":null,"code":"var _jsxFileName = \"/Users/reecefuller/Documents/guessipedia/guess-frontend/src/components/AutoComplete.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AutoCompleteBar = ({\n  options,\n  onSelect,\n  searchValue,\n  setSearchValue,\n  setResult,\n  score,\n  setScore,\n  pageToGuess\n}) => {\n  _s();\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  useEffect(() => {\n    if (searchValue) {\n      const filtered = options.filter(option => option.toLowerCase().includes(searchValue.toLowerCase()));\n      setFilteredOptions(filtered);\n    } else {\n      setFilteredOptions([]);\n    }\n    //clear search options when the option typed is a valid option\n    if (searchValue === filteredOptions[0]) {\n      setFilteredOptions([]);\n    }\n  }, [searchValue, options]);\n\n  //set the search value to the option clicked\n  const handleOptionClick = option => {\n    if (filteredOptions.length > 0) {\n      setSearchValue(filteredOptions[0]);\n    }\n  };\n\n  //Handles enter key press and tab autofilling\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      onSelect(searchValue);\n      setSearchValue(\"\");\n    } else if (event.key === \"Tab\") {\n      event.preventDefault(); // Prevent the default action\n      if (filteredOptions.length > 0) {\n        setSearchValue(filteredOptions[0]);\n      }\n    }\n  };\n  const handleSelectNew = selectedOption => {\n    console.log(selectedOption);\n    if (selectedOption.toLowerCase() === pageToGuess.toLowerCase()) {\n      setResult(\"Correct\");\n    } else {\n      setResult(\"Incorrect\");\n      console.log(score);\n      setScore(score - 10);\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-72 my-4 \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Guess a wiki...\",\n          className: \"w-full p-2 text-sm bg-gray-800 text-white placeholder-gray-400 border border-gray-600 rounded-md\" // Tailwind CSS classes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt- bg-gray-800 border border-gray-600 rounded-md overflow-auto max-h-48\",\n          children: filteredOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleOptionClick(option),\n            className: \"p-2 cursor-pointer text-white hover:bg-gray-700\" // Tailwind CSS classes\n            ,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        handleSelectNew(searchValue);\n        setSearchValue(\"\");\n      },\n      children: \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AutoCompleteBar, \"rUDuRQedjga76ZX45O/2fQcSdSY=\");\n_c = AutoCompleteBar;\nexport default AutoCompleteBar;\nvar _c;\n$RefreshReg$(_c, \"AutoCompleteBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AutoCompleteBar","options","onSelect","searchValue","setSearchValue","setResult","score","setScore","pageToGuess","_s","filteredOptions","setFilteredOptions","filtered","filter","option","toLowerCase","includes","handleOptionClick","length","handleKeyDown","event","key","preventDefault","handleSelectNew","selectedOption","console","log","setWrongGuesses","wrongGuesses","children","className","type","value","onChange","e","target","onKeyDown","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/reecefuller/Documents/guessipedia/guess-frontend/src/components/AutoComplete.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const AutoCompleteBar = ({\n  options,\n  onSelect,\n  searchValue,\n  setSearchValue,\n  setResult,\n  score,\n  setScore,\n  pageToGuess,\n}) => {\n  const [filteredOptions, setFilteredOptions] = useState([]);\n\n  useEffect(() => {\n    if (searchValue) {\n      const filtered = options.filter((option) =>\n        option.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setFilteredOptions(filtered);\n    } else {\n      setFilteredOptions([]);\n    }\n    //clear search options when the option typed is a valid option\n    if (searchValue === filteredOptions[0]) {\n      setFilteredOptions([]);\n    }\n  }, [searchValue, options]);\n\n  //set the search value to the option clicked\n  const handleOptionClick = (option) => {\n    if (filteredOptions.length > 0) {\n      setSearchValue(filteredOptions[0]);\n    }\n  };\n\n  //Handles enter key press and tab autofilling\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      onSelect(searchValue);\n      setSearchValue(\"\");\n    } else if (event.key === \"Tab\") {\n      event.preventDefault(); // Prevent the default action\n      if (filteredOptions.length > 0) {\n        setSearchValue(filteredOptions[0]);\n      }\n    }\n  };\n\n  const handleSelectNew = (selectedOption) => {\n    console.log(selectedOption);\n    if (selectedOption.toLowerCase() === pageToGuess.toLowerCase()) {\n      setResult(\"Correct\");\n    } else {\n      setResult(\"Incorrect\");\n      console.log(score);\n      setScore(score - 10);\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"flex items-center justify-center\">\n        <div className=\"w-72 my-4 \">\n          <input\n            type=\"text\"\n            value={searchValue}\n            onChange={(e) => setSearchValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n            placeholder=\"Guess a wiki...\"\n            className=\"w-full p-2 text-sm bg-gray-800 text-white placeholder-gray-400 border border-gray-600 rounded-md\" // Tailwind CSS classes\n          />\n          <div className=\"mt- bg-gray-800 border border-gray-600 rounded-md overflow-auto max-h-48\">\n            {filteredOptions.map((option, index) => (\n              <div\n                key={index}\n                onClick={() => handleOptionClick(option)}\n                className=\"p-2 cursor-pointer text-white hover:bg-gray-700\" // Tailwind CSS classes\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <button\n        className=\"button\"\n        onClick={() => {\n          handleSelectNew(searchValue);\n          setSearchValue(\"\");\n        }}\n      >\n        Go\n      </button>\n    </>\n  );\n};\n\nexport default AutoCompleteBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}